import copy

laberinto = [["#","E","#","#","#"],
             ["#"," ","#"," ","#"],
             ["#"," "," "," ","#"],
             ["#"," ","#"," ","S"],
             ["#","#","#","#","#"]]

def buscar_E(matriz):
    for l in range(len(matriz)):
        for e in range(len(matriz[l])):
            if matriz[l][e] == "E":
                return [l, e]

coordenada_inicial = buscar_E(laberinto)
fila = int(coordenada_inicial[0])
columna = int(coordenada_inicial[1])
copia = copy.deepcopy(laberinto)

def matriz_binaria(matriz):
    for l in range(len(matriz)):
        for e in range(len(matriz[l])):
            if matriz[l][e] == "E":
                matriz[l][e] = 3
            elif matriz[l][e] == " ":
                matriz[l][e] = 0
            elif matriz[l][e] == "#":
                matriz[l][e] = 1
            elif matriz[l][e] == "S":
                matriz[l][e] = 5
    return matriz

nueva_matriz = matriz_binaria(copia)

def recorrido(nm, i, j):
    if nm[i][j] == 5:
        return [[i, j]]
    if nm[i][j] == 1:
        return []
    nm[i][j] = 2
